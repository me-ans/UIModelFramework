
/**
 This file is automatically generated by UIEditor. It defines the layout and data bindings of
 all UISpec owned by the associated UIModel. Include the UIEditor module with your development
 build in order to browse, open and edit all UISpec in your application at runtime.
 
 (Last generated 28 Apr 2019 8:48:22pm)
 */

#include "MainModel.h"

INIT_SYMBOL (MainModel, Transcript);
INIT_SYMBOL (MainModel, Progress);
INIT_SYMBOL (MainModel, List);
INIT_SYMBOL (MainModel, Settings);
INIT_SYMBOL (MainModel, TabContents);
INIT_SYMBOL (MainModel, TabSelection);

WeakReference<UISpec> MainModel::MainWindowSpec = new UISpec
(
 MainModel::getMetaClass(),
 "MainWindowSpec",
 []()
 {
    auto window = new WindowSpec ();
    window->setLayout (LayoutFrame("50% - 320", "50% - 300", "640 relative", "600 relative"));
    window->setLabel ("Example Window");
    window->addBinding (Bind::GetLabel (MEMBER (&MainModel::getWindowTitle), Labels));
    {
        auto content = new CompositeSpec ("content");
        {
            auto tabComposite = new TabsSpec ("tabComposite");
            tabComposite->setLayout (LayoutFrame("4", "4", "100% - 4", "100% - 4"));
            tabComposite->setOrientation (TabbedButtonBar::Orientation::TabsAtTop);
            tabComposite->addBinding (Bind::GetValue (MEMBER (&MainModel::getTabPages), TabContents));
            tabComposite->addBinding (Bind::GetSelection (MEMBER (&MainModel::getTabSelection), TabSelection));
            tabComposite->addBinding (Bind::SetSelection (MEMBER (&MainModel::setTabSelection)));
            content->addComponent (tabComposite);
        }
        window->addComponent (content);
    }
    return window;
}
);



